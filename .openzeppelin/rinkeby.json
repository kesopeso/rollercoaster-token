{
  "manifestVersion": "3.1",
  "impls": {
    "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b": {
      "address": "0x6dED6c0E4699d07Bd2cf90dB34FdB8378930DE26",
      "txHash": "0xfb20cf1a9a616b0dc8b5dd711d8f8ed0940c1158bc7ca6648d4ebd8ca811643f",
      "layout": {
        "storage": [],
        "types": {}
      }
    },
    "8bd48a854d1669b40fe160194e3f5b7424f54843258609b7ac7f5dda9ae9a13a": {
      "address": "0x1D9f6ECB882dB18751d0F6Dd6e410C020953E4B8",
      "txHash": "0xb9b61cb6d88da9412a3cf4b7c51ef6710e196cfe648e96265de54c17359b4e23",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "Farm",
            "label": "activator",
            "type": "t_address",
            "src": "Farm.sol:44"
          },
          {
            "contract": "Farm",
            "label": "isFarmingStarted",
            "type": "t_bool",
            "src": "Farm.sol:45"
          },
          {
            "contract": "Farm",
            "label": "totalReward",
            "type": "t_uint256",
            "src": "Farm.sol:46"
          },
          {
            "contract": "Farm",
            "label": "currentReward",
            "type": "t_uint256",
            "src": "Farm.sol:47"
          },
          {
            "contract": "Farm",
            "label": "rewardToken",
            "type": "t_contract(IERC20)6712",
            "src": "Farm.sol:48"
          },
          {
            "contract": "Farm",
            "label": "farmToken",
            "type": "t_contract(IERC20)6712",
            "src": "Farm.sol:49"
          },
          {
            "contract": "Farm",
            "label": "totalSnapshots",
            "type": "t_struct(TotalSnapshots)515_storage",
            "src": "Farm.sol:50"
          },
          {
            "contract": "Farm",
            "label": "singleSnapshots",
            "type": "t_mapping(t_address,t_struct(SingleSnapshots)524_storage)",
            "src": "Farm.sol:51"
          },
          {
            "contract": "Farm",
            "label": "harvests",
            "type": "t_mapping(t_address,t_struct(Harvests)540_storage)",
            "src": "Farm.sol:52"
          },
          {
            "contract": "Farm",
            "label": "__gap",
            "type": "t_array(t_uint256)38_storage",
            "src": "Farm.sol:401"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_contract(IERC20)6712": {
            "label": "contract IERC20"
          },
          "t_struct(TotalSnapshots)515_storage": {
            "label": "struct Farm.TotalSnapshots",
            "members": [
              {
                "label": "count",
                "type": "t_uint256"
              },
              {
                "label": "timestamps",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "staked",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "reward",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_mapping(t_address,t_struct(SingleSnapshots)524_storage)": {
            "label": "mapping(address => struct Farm.SingleSnapshots)"
          },
          "t_struct(SingleSnapshots)524_storage": {
            "label": "struct Farm.SingleSnapshots",
            "members": [
              {
                "label": "count",
                "type": "t_uint256"
              },
              {
                "label": "totalSnapshotIds",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "staked",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_mapping(t_address,t_struct(Harvests)540_storage)": {
            "label": "mapping(address => struct Farm.Harvests)"
          },
          "t_struct(Harvests)540_storage": {
            "label": "struct Farm.Harvests",
            "members": [
              {
                "label": "count",
                "type": "t_uint256"
              },
              {
                "label": "firstUnclaimedId",
                "type": "t_uint256"
              },
              {
                "label": "totalSnapshotId",
                "type": "t_uint256"
              },
              {
                "label": "timestamps",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "claimed",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "total",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_array(t_uint256)38_storage": {
            "label": "uint256[38]"
          }
        }
      }
    },
    "90e7350f6bb7b808d2a040f7f8574e940b0cba64e58f11a733efb63d3be36351": {
      "address": "0xe02Cbad46D9F161B682af70C43719b225AAA3ab3",
      "txHash": "0xcbc9680dc78fabcb14f6e1601996d6de91b45f99b2e7b89ffd1cf14ad8986f23",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:25"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "../@openzeppelin/contracts-upgradeable/proxy/Initializable.sol:30"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "../@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:31"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:37"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:39"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_totalSupply",
            "type": "t_uint256",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:41"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:43"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:45"
          },
          {
            "contract": "ERC20Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "../@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:312"
          },
          {
            "contract": "Token",
            "label": "distributor",
            "type": "t_address",
            "src": "Token.sol:12"
          },
          {
            "contract": "Token",
            "label": "treasury",
            "type": "t_address",
            "src": "Token.sol:13"
          },
          {
            "contract": "Token",
            "label": "transferLimiter",
            "type": "t_address",
            "src": "Token.sol:14"
          },
          {
            "contract": "Token",
            "label": "uniswapPair",
            "type": "t_address",
            "src": "Token.sol:15"
          },
          {
            "contract": "Token",
            "label": "isLocked",
            "type": "t_bool",
            "src": "Token.sol:16"
          },
          {
            "contract": "Token",
            "label": "nonBurnableSenders",
            "type": "t_mapping(t_address,t_bool)",
            "src": "Token.sol:17"
          },
          {
            "contract": "Token",
            "label": "nonBurnableRecipients",
            "type": "t_mapping(t_address,t_bool)",
            "src": "Token.sol:18"
          },
          {
            "contract": "Token",
            "label": "__gap",
            "type": "t_array(t_uint256)43_storage",
            "src": "Token.sol:136"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)43_storage": {
            "label": "uint256[43]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  },
  "admin": {
    "address": "0xBE22cBf0546BE13dD7da07860656d45dE527A14D",
    "txHash": "0x66ac1f588913a3331a859322f00648da9915769c0368bf56d0e57ce0e435b8e4"
  }
}
